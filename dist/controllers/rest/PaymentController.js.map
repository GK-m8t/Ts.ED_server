{"version":3,"file":"PaymentController.js","sourceRoot":"src/","sources":["controllers/rest/PaymentController.ts"],"names":[],"mappings":";AAAA;;;;;;;GAOG;;;;AAEH,iCAA8C;AAC9C,2DAA+D;AAC/D,yCAAoC;AACpC,6CAAoE;AAG7D,IAAM,iBAAiB,GAAvB,MAAM,iBAAiB;IACV,kBAAkB,CAAqB;IACvC,cAAc,CAAiB;IAEjD;;;;;;OAMG;IAGG,AAAN,KAAK,CAAC,qBAAqB,CACF,OAAe,EAChB,MAAe;QAErC,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAChE,OAAO,EACP,MAAM,CACP,CAAC;QACF,OAAO,WAAW,CAAC;IACrB,CAAC;CACF,CAAA;AAvBY,8CAAiB;AACV;IAAjB,IAAA,WAAM,GAAE;sCAA6B,6BAAkB;6DAAC;AACvC;IAAjB,IAAA,WAAM,GAAE;sCAAyB,yBAAc;yDAAC;AAW3C;IADL,IAAA,aAAI,EAAC,WAAW,CAAC;IAEf,mBAAA,IAAA,4BAAU,EAAC,SAAS,CAAC,CAAA;IACrB,mBAAA,IAAA,4BAAU,EAAC,QAAQ,CAAC,CAAA;;;;8DAOtB;4BAtBU,iBAAiB;IAD7B,IAAA,eAAU,EAAC,WAAW,CAAC;GACX,iBAAiB,CAuB7B","sourcesContent":["/**\n * PaymentController is responsible for creating payment sessions for checkout processes.\n *\n * @remarks\n * This controller handles the creation of payment sessions for the 3D printables identified by `tokenId`.\n * It determines whether to use card payments or crypto payment methods based on the `isCard` parameter.\n * The resulting payment link is returned to initiate the payment process.\n */\n\nimport { Controller, Inject } from \"@tsed/di\";\nimport { PathParams, BodyParams } from \"@tsed/platform-params\";\nimport { Post } from \"@tsed/schema\";\nimport { CardPaymentService, PaymentService } from \"../../services\";\n\n@Controller(\"/checkout\")\nexport class PaymentController {\n  @Inject() private cardPaymentService: CardPaymentService;\n  @Inject() private paymentService: PaymentService;\n\n  /**\n   * Create a payment session for a checkout process.\n   *\n   * @param tokenId - The identifier of the product for which a payment session is created.\n   * @param isCard - A boolean flag indicating whether card payment is selected.\n   * @returns A payment link to initiate the payment process.\n   */\n\n  @Post(\"/:tokenId\")\n  async createCheckoutSession(\n    @PathParams(\"tokenId\") tokenId: number,\n    @BodyParams(\"isCard\") isCard: boolean\n  ) {\n    const paymentLink = await this.paymentService.createPaymentSession(\n      tokenId,\n      isCard\n    );\n    return paymentLink;\n  }\n}\n"]}