{"version":3,"file":"Server.js","sourceRoot":"src/","sources":["Server.ts"],"names":[],"mappings":";;;;AAAA,+BAA4B;AAC5B,iCAAiD;AACjD,yCAAmD;AACnD,kCAAgC,CAAC,uBAAuB;AACxD,qBAAmB;AACnB,yBAAuB;AACvB,0BAAwB;AACxB,0CAAwC;AACxC,yEAAmD;AACnD,uEAAiD;AACjD,6EAAuD;AAmChD,IAAM,MAAM,GAAZ,MAAM,MAAM;IAEP,GAAG,CAAsB;IAGzB,QAAQ,CAAgB;CACnC,CAAA;AANY,wBAAM;AAEP;IADT,IAAA,WAAM,GAAE;sCACM,4BAAmB;mCAAC;AAGzB;IADT,IAAA,kBAAa,GAAE;;wCACkB;iBALvB,MAAM;IAjClB,IAAA,kBAAa,EAAC;QACb,GAAG,cAAM;QACT,WAAW,EAAE,CAAC,kBAAkB,CAAC;QACjC,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI;QAClC,SAAS,EAAE,KAAK;QAChB,qBAAqB,EAAE,IAAI;QAC3B,KAAK,EAAE;YACL,GAAG,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC9B,OAAO,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACjC,UAAU,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SACxC;QACD,OAAO,EAAE;YACP;gBACE,IAAI,EAAE,MAAM;gBACZ,WAAW,EAAE,OAAO;aACrB;SACF;QACD,WAAW,EAAE;YACX,MAAM;YACN,eAAe;YACf,aAAa;YACb,iBAAiB;YACjB,aAAa;YACb,EAAE,GAAG,EAAE,mBAAmB,EAAE,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE;SAC1D;QACD,KAAK,EAAE;YACL,IAAI,EAAE,IAAA,WAAI,EAAC,OAAO,CAAC,GAAG,EAAE,EAAE,UAAU,CAAC;YACrC,UAAU,EAAE;gBACV,GAAG,EAAE,KAAK;aACX;SACF;QACD,OAAO,EAAE,CAAC,cAAc,CAAC;KAC1B,CAAC;GACW,MAAM,CAMlB","sourcesContent":["import { join } from \"path\";\nimport { Configuration, Inject } from \"@tsed/di\";\nimport { PlatformApplication } from \"@tsed/common\";\nimport \"@tsed/platform-express\"; // /!\\ keep this import\nimport \"@tsed/ajv\";\nimport \"@tsed/swagger\";\nimport \"@tsed/mongoose\";\nimport { config } from \"./config/index\";\nimport * as pages from \"./controllers/pages/index\";\nimport * as rest from \"./controllers/rest/index\";\nimport * as webhook from \"./controllers/webhook/index\";\n\n@Configuration({\n  ...config,\n  acceptMimes: [\"application/json\"],\n  httpPort: process.env.PORT || 8083,\n  httpsPort: false, // CHANGE\n  disableComponentsScan: true,\n  mount: {\n    \"/\": [...Object.values(pages)],\n    \"/rest\": [...Object.values(rest)],\n    \"/webhook\": [...Object.values(webhook)]\n  },\n  swagger: [\n    {\n      path: \"/doc\",\n      specVersion: \"3.0.1\"\n    }\n  ],\n  middlewares: [\n    \"cors\",\n    \"cookie-parser\",\n    \"compression\",\n    \"method-override\",\n    \"json-parser\",\n    { use: \"urlencoded-parser\", options: { extended: true } }\n  ],\n  views: {\n    root: join(process.cwd(), \"../views\"),\n    extensions: {\n      ejs: \"ejs\"\n    }\n  },\n  exclude: [\"**/*.spec.ts\"]\n})\nexport class Server {\n  @Inject()\n  protected app: PlatformApplication;\n\n  @Configuration()\n  protected settings: Configuration;\n}\n"]}