{"version":3,"file":"CryptoCheckoutUtil.js","sourceRoot":"src/","sources":["utils/CryptoCheckoutUtil.ts"],"names":[],"mappings":";;;;AAAA,0DAA0B;AAE1B,4CAA0C;AAE1C,MAAa,kBAAkB;IACZ,MAAM,CAAqB;IAE5C;QACE,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;IAC7C,CAAC;IAED,KAAK,CAAC,aAAa,CACjB,OAAe,EACf,OAAgB,EAChB,IAAY;QAEZ,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC;YACjC,IAAI,EAAE,GAAG,OAAO,EAAE;YAClB,WAAW,EAAE,kBAAkB;YAC/B,YAAY,EAAE,aAAa;YAC3B,WAAW,EAAE;gBACX,MAAM,EAAE,IAAI;gBACZ,QAAQ,EAAE,KAAK;aAChB;YACD,QAAQ,EAAE;gBACR,WAAW,EAAE,GAAG,OAAO,EAAE;gBACzB,aAAa,EAAE,OAAO,CAAC,OAAO;aAC/B;YACD,YAAY,EAAE,sBAAU,CAAC,4BAA4B;YACrD,UAAU,EAAE,sBAAU,CAAC,2BAA2B;SACnD,CAAC,CAAC;QACH,MAAM,MAAM,GAAG;YACb,MAAM,EAAE,MAAM;YACd,GAAG,EAAE,2CAA2C;YAChD,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;gBAClC,MAAM,EAAE,kBAAkB;gBAC1B,cAAc,EAAE,YAAY;gBAC5B,cAAc,EAAE,IAAI,CAAC,MAAM;aAC5B;YACD,IAAI,EAAE,WAAW;SAClB,CAAC;QACF,IAAI,OAAY,CAAC;QAEjB,IAAI;YACF,OAAO,GAAG,MAAM,IAAA,eAAK,EAAC,MAAM,CAAC,CAAC;SAC/B;QAAC,OAAO,KAAK,EAAE;YACd,MAAM,KAAK,CAAC;SACb;QACD,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;IAC3B,CAAC;CACF;AA/CD,gDA+CC","sourcesContent":["import axios from \"axios\";\nimport { Account } from \"../types\";\nimport { Governance } from \"../constants\";\n\nexport class CryptoCheckoutUtil {\n  private readonly apiKey: string | undefined;\n\n  constructor() {\n    this.apiKey = process.env.COINBASE_API_KEY;\n  }\n\n  async createSession(\n    tokenId: string,\n    account: Account,\n    cost: number\n  ): Promise<any> {\n    const requestData = JSON.stringify({\n      name: `${tokenId}`,\n      description: \"test description\",\n      pricing_type: \"fixed_price\",\n      local_price: {\n        amount: cost,\n        currency: \"USD\"\n      },\n      metadata: {\n        customer_id: `${tokenId}`,\n        customer_name: account.address\n      },\n      redirect_url: Governance.PAYMENT_SUCCESS_REDIRECT_URL,\n      cancel_url: Governance.PAYMENT_CANCEL_REDIRECT_URL\n    });\n    const config = {\n      method: \"post\",\n      url: \"https://api.commerce.coinbase.com/charges\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        \"X-CC-Version\": \"2018-03-22\",\n        \"X-CC-Api-Key\": this.apiKey\n      },\n      data: requestData\n    };\n    let session: any;\n\n    try {\n      session = await axios(config);\n    } catch (error) {\n      throw error;\n    }\n    return session.data.data;\n  }\n}\n"]}