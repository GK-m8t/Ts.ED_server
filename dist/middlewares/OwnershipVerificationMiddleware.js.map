{"version":3,"file":"OwnershipVerificationMiddleware.js","sourceRoot":"src/","sources":["middlewares/OwnershipVerificationMiddleware.ts"],"names":[],"mappings":";;;;AAAA,2DAAyE;AACzE,qEAA2E;AAI3E,oCAAqD;AAErD,IAAI,GAAG,GAAW,OAAO,CAAC,GAAG,CAAC;AAGvB,IAAM,8BAA8B,GAApC,MAAM,8BAA8B;IACrB;IAApB,YAAoB,IAA+B;QAA/B,SAAI,GAAJ,IAAI,CAA2B;IAAG,CAAC;IACjD,AAAN,KAAK,CAAC,GAAG,CACI,OAAgB,EACJ,OAAe,EACvB,UAAe;QAE9B,MAAM,OAAO,GAAY,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAEvD,IAAI;YACF,MAAM,MAAM,GAAY,MAAM,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;YAC1E,IAAI,CAAC,MAAM,EAAE;gBACX,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;oBAChC,OAAO,EAAE,qCAAqC;iBAC/C,CAAC,CAAC;aACJ;SACF;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBAChC,OAAO,EAAE,oBAAoB,KAAK,CAAC,OAAO,EAAE;aAC7C,CAAC,CAAC;SACJ;IACH,CAAC;CACF,CAAA;AAtBY,wEAA8B;AAEnC;IACH,mBAAA,IAAA,yBAAO,GAAE,CAAA;IACT,mBAAA,IAAA,4BAAU,EAAC,SAAS,CAAC,CAAA;IACrB,mBAAA,IAAA,6BAAW,GAAE,CAAA;;;;yDAgBf;yCArBU,8BAA8B;IAD1C,IAAA,iCAAU,GAAE;6CAEe,iCAAyB;GADxC,8BAA8B,CAsB1C","sourcesContent":["import { Context, PathParams, QueryParams } from \"@tsed/platform-params\";\nimport { MiddlewareMethods, Middleware } from \"@tsed/platform-middlewares\";\nimport { ethers } from \"ethers\";\n\nimport { Account, Credential } from \"../types\";\nimport { OwnershipVerificationUtil } from \"../utils\";\n\nlet log: object = console.log;\n\n@Middleware()\nexport class OwnershipVerificatonMiddleware implements MiddlewareMethods {\n  constructor(private util: OwnershipVerificationUtil) {}\n  async use(\n    @Context() context: Context,\n    @PathParams(\"tokenId\") tokenId: string,\n    @QueryParams() credential: any\n  ) {\n    const account: Account = JSON.parse(credential.signer);\n\n    try {\n      const result: boolean = await this.util.verifyOwnership(tokenId, account);\n      if (!result) {\n        context.response.status(403).body({\n          message: \"OwnerVerifError: Account not owner.\"\n        });\n      }\n    } catch (error) {\n      context.response.status(500).body({\n        message: `OwnerVerifError: ${error.message}`\n      });\n    }\n  }\n}\n"]}