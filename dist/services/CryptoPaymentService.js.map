{"version":3,"file":"CryptoPaymentService.js","sourceRoot":"src/","sources":["services/CryptoPaymentService.ts"],"names":[],"mappings":";;;AAAA,MAAa,oBAAoB;IAC/B,gBAAe,CAAC;IAEhB,KAAK,CAAC,oBAAoB,CAAC,KAAa;QACtC,IAAI;YACF,MAAM,cAAc,GAAW,OAAO,CAAC,GAAG,CAAC,gBAAgB,IAAI,EAAE,CAAC;YAClE,MAAM,MAAM,GAAG,2CAA2C,CAAC;YAC3D,MAAM,eAAe,GAAG,IAAI,OAAO,EAAE,CAAC;YACtC,eAAe,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;YAC3D,eAAe,CAAC,MAAM,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;YACrD,eAAe,CAAC,MAAM,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;YACvD,MAAM,WAAW,GAAG;gBAClB,IAAI,EAAE,MAAM;gBACZ,WAAW,EAAE,kBAAkB;gBAC/B,YAAY,EAAE,aAAa;gBAC3B,WAAW,EAAE;oBACX,MAAM,EAAE,KAAK;oBACb,QAAQ,EAAE,KAAK;iBAChB;aACF,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;YAExC,MAAM,cAAc,GAAgB;gBAClC,MAAM,EAAE,MAAM;gBACd,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE,GAAG;gBACT,QAAQ,EAAE,QAAQ;aACnB,CAAC;YAEF,MAAM,yBAAyB,GAAG,MAAM,KAAK,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;YAEtE,IAAI,CAAC,yBAAyB,CAAC,EAAE,EAAE;gBACjC,MAAM,IAAI,KAAK,CACb,gDAAgD,yBAAyB,CAAC,MAAM,EAAE,CACnF,CAAC;aACH;YACD,MAAM,YAAY,GAAG,MAAM,yBAAyB,CAAC,IAAI,EAAE,CAAC;YAC5D,kCAAkC;YAClC,OAAO;gBACL,WAAW,EAAE,YAAY,CAAC,IAAI,CAAC,UAAoB;gBACnD,SAAS,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO;aAC1D,CAAC;SACH;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,KAAK,CAAC,qCAAqC,EAAE,KAAK,CAAC,CAAC;YAC5D,MAAM,KAAK,CAAC;SACb;IACH,CAAC;CACF;AAhDD,oDAgDC","sourcesContent":["export class CryptoPaymentService {\n  constructor() {}\n\n  async createCoinbaseCharge(price: number): Promise<any> {\n    try {\n      const coinbaseAPIKey: string = process.env.COINBASE_API_KEY || \"\";\n      const apiUrl = \"https://api.commerce.coinbase.com/charges\";\n      const coinbaseHeaders = new Headers();\n      coinbaseHeaders.append(\"Content-Type\", \"application/json\");\n      coinbaseHeaders.append(\"Accept\", \"application/json\");\n      coinbaseHeaders.append(\"X-CC-Api-Key\", coinbaseAPIKey);\n      const requestData = {\n        name: \"test\",\n        description: \"test description\",\n        pricing_type: \"fixed_price\",\n        local_price: {\n          amount: price,\n          currency: \"USD\"\n        }\n      };\n\n      const raw = JSON.stringify(requestData);\n\n      const requestOptions: RequestInit = {\n        method: \"POST\",\n        headers: coinbaseHeaders,\n        body: raw,\n        redirect: \"follow\"\n      };\n\n      const coinbaseChargeApiResponse = await fetch(apiUrl, requestOptions);\n\n      if (!coinbaseChargeApiResponse.ok) {\n        throw new Error(\n          `Failed to post data to Coinbase API. Status: ${coinbaseChargeApiResponse.status}`\n        );\n      }\n      const coinbaseData = await coinbaseChargeApiResponse.json();\n      // console.log(coinbaseData.data);\n      return {\n        payment_url: coinbaseData.data.hosted_url as string,\n        timestamp: new Date(coinbaseData.data.created_at).valueOf\n      };\n    } catch (error) {\n      console.error(\"Error posting data to Coinbase API:\", error);\n      throw error;\n    }\n  }\n}\n"]}